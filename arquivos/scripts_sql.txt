#Schema advice

-- Table: public.advice

-- DROP TABLE IF EXISTS public.advice;

CREATE TABLE IF NOT EXISTS public.advice
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    descricao text COLLATE pg_catalog."default" NOT NULL,
    nome character varying(100) COLLATE pg_catalog."default",
    tipo character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT advice_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.advice
    OWNER to hypeadvice;



#Schema cliente

CREATE TABLE cliente

-- Table: public.cliente

-- DROP TABLE IF EXISTS public.cliente;

CREATE TABLE IF NOT EXISTS public.cliente
(
    id bigint NOT NULL,
    nome_cliente character varying COLLATE pg_catalog."default",
    cpf character varying COLLATE pg_catalog."default",
    cep character varying COLLATE pg_catalog."default",
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    CONSTRAINT cliente_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.cliente
    OWNER to postgres;



#Schema venda

CREATE TABLE venda

-- Table: public.venda

-- DROP TABLE IF EXISTS public.venda;

CREATE TABLE IF NOT EXISTS public.venda
(
    id bigint NOT NULL,
    "FK_id_conselho" bigint,
    "FK_id_cliente" bigint,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    CONSTRAINT vendas_pkey PRIMARY KEY (id),
    CONSTRAINT "FK_id_cliente" FOREIGN KEY ("FK_id_cliente")
        REFERENCES public.cliente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT "FK_id_conselho" FOREIGN KEY ("FK_id_conselho")
        REFERENCES public.advice (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.venda
    OWNER to postgres;